# ATENCIÓN: Se muestran credenciales de ejemplo, la base ya no existe. 
# ATENCIÓN: Se muestran credenciales de ejemplo, la base ya no existe. 
#spring.datasource.url=jdbc:mysql://35.202.252.213:3306/springdb
#34.64.190.243
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver 
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/hncdb
#spring.datasource.url=jdbc:mysql://localhost/hncdb?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://localhost:3306/hncdb
#spring.cloud.gcp.sql.instance-connection-name=hncapital:asia-northeast3:hncdb
spring.datasource.username=hnc
spring.datasource.password=6767
spring.jpa.hibernate.ddl-auto=update

#spring.cloud.gcp.sql.database-name=hncdb

#mybatis.type-aliases-package=com.example.demo.dto
#mybatis.mapper-locations=mybatis/mapper/**/*.xml

mybatis.config-location=mybatis-config.xml

#spring.cloud.appId=hncapital
#Ejemplo para conectarse con credenciales
#spring.cloud.gcp.spanner.credentials.location=file:./src/main/resources/keys-gcp.json

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=512MB
# Max Request Size
spring.servlet.multipart.max-request-size=512MB
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=./file
spring.mvc.static-path-pattern=/files/** 
spring.resources.static-locations=classpath:/files/ 
spring.resources.add-mappings=true

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/documents/
#file.upload-dir=D:/documents/

custom:
  path:
    upload-pdf: '/var/lib/jenkins/area_deploy/jiniworld/upload-pdf/'



